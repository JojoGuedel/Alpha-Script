include "stdio.h" as stdio;

section std;

interface IEnumerator<T>:
    pub def get_current() -> T;
    pub def move_next() -> bool;

struct ArrayEnumeartor<T>:
    extends IEnumeartor<T>;

    var _val: T[];
    var _index uint;

pub constructor ArrayEnumeartor<T>(val):
    self._val = val;

pub def ArrayEnumeartor.get_current():
    return self._val[self._index];

pub def ArrayEnumeartor.move_next():
    return ++self._index < self._val.length();

interface IEnumerable<T>:
    pub def get_enumerator() -> IEnumeartor<T>;

struct string:
    extends IEnumerable<char>;

    var _val: char[];

    pub constructor string();
    pub constructor string(val: char[]);
    
    pub operator [] (index: int) -> char;

pub constructor string():
    self._val = new char[0];

pub constructor string(val):
    self._val = val;

pub operator string[] (index):
    return self._val[index];

pub def string.get_enumerator():
    return new ArrayEnumeartor<char>(self._val);

def main(args[]: str[]):
    var str: string = "test";
    
    for var c in str:
        stdio.printf(c);